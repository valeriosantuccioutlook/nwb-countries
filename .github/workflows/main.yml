name: NWB APIs

on:
  push:
    branches: [ "dev", "main", "test" ]
  pull_request:
    branches: [ "dev", "main", "test" ]

permissions:
  contents: write

jobs:
  PRE-COMMIT:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      # Black
      - name: Black formatting
        id: black
        uses: psf/black@stable
        with:
          options: "--line-length=120 --verbose"
          version: "23.7.0"
      - name: Create Pull Request
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "GitHub Actions automated workflow: committing Black formatting changes"
      # Ruff
      - name: Ruff linting
        uses: chartboost/ruff-action@v1
        with:
          args: --fix --show-fixes --verbose --ignore E501
          src: "."

  CI:
    needs: PRE-COMMIT
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
    timeout-minutes: 9600

    steps:
    - uses: actions/checkout@v3

    # Install python 3.12
    - name: Set up Python 3.12
      id: setup-python
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
        cache: 'pipenv'

    # Install pipenv and set up virtualenv
    - name: Install pipenv and instantiate virtualenv
      run: pip3 install pipenv && pipenv --python 3.12 && pip install --upgrade pip && pip3 install -r requirements.txt
    
    # Adding .env file
    - name: Setup .env file (no secrets!)
      run: cp envfile.txt .env

    # Manually caching dependencies
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-${{ hashFiles('Pipfile.lock') }}

    # UNIT TESTS
    - name: Run Tests
      run: pipenv run pytest